version: 2.1

jobs:
  build:
    docker:
      - image: cimg/ruby:3.3.3-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: cimg/postgres:12.20
        environment:
          POSTGRES_DB: example_app_test
          POSTGRES_USER: root

    steps:
      - checkout
      - restore_cache:
          keys:
          - yuriita-bundle-{{ checksum "Gemfile.lock" }}
          - yuriita-bundle-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          paths:
            - vendor/bundle
          key: yuriita-bundle-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - yuriita-yarn-{{ checksum "spec/example_app/yarn.lock" }}
            - yuriita-yarn-

      - run:
          name: Yarn Install
          command: bin/yarn install --frozen-lockfile --cache-folder ~/.cache/yarn

      - save_cache:
          key: yuriita-yarn-{{ checksum "spec/example_app/yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Precompile Assets
          command: NODE_ENV=test bin/rails assets:precompile

      - run:
          name: Database Setup
          command: bundle exec rails db:schema:load --trace

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: RSpec
          command: |
            bundle exec rspec \
              --format RspecJunitFormatter \
              --out test_results/rspec.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test_results
          destination: test_results
